 ---------------------------------------
# Package org.phoebus.archive.reader.rdb
# --------------------------------------

# User for reading archived data
user=archive

# Password for reading archived data
password=$archive

# Table prefix.
#
# For Oracle, this is typically the schema name,
# including `.`.
prefix=

# Timeout in seconds for certain SQL queries.
#
# Fundamentally, the SQL queries for data take as long as they take
# and any artificial timeout just breaks queries that would otherwise
# have returned OK a few seconds after the timeout.
#
# We've seen Oracle lockups, though, that caused JDBC to hang forever
# because the SAMPLE table was locked. No error/exception, just hanging.
#
# A timeout is used for operations other than getting the actual data,
# for example the channel id-by-name query which _should_ return within
# a shot time, to catch that type of RDB lockup.
#
# Setting the timeout to 0 disables calls to setQueryTimeout,
# which may be required for PostgreSQL where the `setQueryTimeout` API is not implemented.
timeout_secs=120

# Use a BLOB to read array samples?
#
# The original `SAMPLE` table did not contain an `ARRAY_VAL` column
# for the array blob data, but instead used a separate `ARRAY_VAL` table.
# When running against an old database, this parameter must be set to false.
use_array_blob=true

# Use stored procedures and functions for 'optimized' data readout?
#
# Set to procedure name, or nothing to disable stored procedure.
#
# :::{rubric} Examples
# :::
#
# ```{code-block} properties
# :caption: MySQL
#
# org.phoebus.archive.reader.rdb/stored_procedure=archive.get_browser_data
# ```
#
# ```{code-block} properties
# :caption: PostgreSQL
#
# org.phoebus.archive.reader.rdb/stored_procedure=public.get_browser_data
# ```
#
# ```{code-block} properties
# :caption: Oracle
#
# org.phoebus.archive.reader.rdb/stored_procedure=chan_arch.archive_reader_pkg.get_browser_data
# org.phoebus.archive.reader.rdb/starttime_function=SELECT chan_arch.archive_reader_pkg.get_actual_start_time (?, ?, ?)  FROM DUAL
# ```
stored_procedure=
starttime_function=

# JDBC Statement 'fetch size':
# Number of samples to read in one network transfer.
#
# For Oracle, the default is 10.
# Tests resulted in a speed increase up to fetch sizes of 1000.
# On the other hand, bigger numbers can result in `java.lang.OutOfMemoryError`.
fetch_size=1000

# With EPICS IOCs from release 7 on, the PVs
# `xxx`, `ca://xxx` and `pva://xxx` all refer
# to the same record `xxx` on the IOC.
#
# When the plot requests `pva://xxx`, the archive might still
# trace that channel as `ca://xxx` or `xxx`.
# Alternatively, the archive might already track the channel
# as `pva://xxx` while data browser plots still use `ca://xxx`
# or just `xxx`.
#
# This preference setting instructs the data browser
# to try all equivalent variants. If any types are listed,
# just `xxx` without any prefix will also be checked in addition
# to the listed types.
#
# The default of setting of `ca, pva` supports the seamless
# transition between the key protocols.
#
# When `equivalent_pv_prefixes` is empty,
# the PV name is used as is without looking for any equivalent names.
equivalent_pv_prefixes=ca, pva
