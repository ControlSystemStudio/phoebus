# ------------------------------------------
# Package org.csstudio.display.converter.edm
# ------------------------------------------

# Path to the directory where the auto-converter will
# generate auto-converted files.
#
# May include system properties like `$(user.home)`.
#
# Target directory must be in the file system.
# The folder is created if it doesn't exist.
#
# When left empty, the auto-converter is disabled.
auto_converter_dir=

# Path (prefix) that will be stripped from the original
# EDM file name before converting.
#
# When empty, the complete path will be stripped.
#
# For example, assume we need to convert
# {file}`/{path/to/original}/vacuum/segment1/vac1.edl`.
#
# With an empty `auto_converter_strip`,
# this will be converted into {file}`{auto_converter_dir}/vac1.edl`.
#
# With `auto_converter_strip=/path/to/original`,
# it will be converted into {file}`{auto_converter_dir}/vacuum/segment1/vac1.edl`.
auto_converter_strip=

# EDM `colors.list` file.
#
# Must be defined to use converter.
# May be a file system path or an `http://` link
colors_list=

# Font mappings
#
# :format: `EDMFontPattern=DisplayBuilderFont,Pattern=Font,...`
#
# `EDMFontPattern` is regular expression for the name used by EDM
#
# Patterns are checked in the order in which they're listed in here,
# so a catch-all `.*` pattern should be at the end
font_mappings=helvetica=Liberation Sans,courier=Liberation Mono,times=Liberation Serif,.*=Liberation Sans

# Path to text file that lists EDM search paths.
#
# May be a file system path or an `http://` link.
#
# In the file, each line in the text file contains a path,
# which may be a file system path or a `http://` link.
#
# When trying to open a {file}`{display}.edl` file,
# converter will try each path in the order
# listed in the file.
#
# Lines starting with `#` are ignored.
#
# When the `edm_paths_config` is left empty,
# the converter won't find files.
edm_paths_config=

# Pattern for patching paths to {file}`{name}.stp` (StripTool) files.
#
# 'Shell Command' buttons in EDM that invoke a command of the form:
#
#     StripTool /some/path/to/plot.stp
#
# are converted into `ActionButtons` which open the `/some/path/to/plot.stp` file.
# Data Browser will then open the file when the action is invoked.
#
# The following regular expression pattern and replacement can be used
# to patch {file}`/{some/path/to/plot}.stp`.
# By default, both are empty, so the path remains unchanged.
#
# Example for transforming all absolute paths into a web location:
#
#     org.csstudio.display.converter.edm/stp_path_patch_pattern=^(/)
#     org.csstudio.display.converter.edm/stp_path_patch_replacement=https://my_web_server/stripcharts$1
#
# Note how the pattern may include group markers (..)
# and the replacement can reference them via $1, $2, ...
stp_path_patch_pattern=

# Replacement for patching paths to {file}`{name}.stp` (StripTool) files.
#
# See {prefs:pref}`stp_path_patch_pattern`
# for more information.
stp_path_patch_replacement=

# Strip "close" buttons which are not needed in Phoebus tabs and windows
strip_close_button=true
