services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.2
    hostname: elastic
    networks:
      - middleware-net
    ports:
      - "9200:9200"
    environment:
      discovery.type: single-node
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "false"
    volumes:
      - es-data:/usr/share/elasticsearch/data

  mongo:
    image: mongo
    networks:
      - middleware-net
    ports:
      - 27017:27017
    volumes:
      - mongodata:/etc/mongo


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    networks:
      - middleware-net
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    networks:
      - middleware-net
    ports:
      - 9092:9092
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9094,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://:9094,OUTSIDE://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL


volumes:
  es-data:
    driver: local
  mongodata:
    driver: local

networks:
  middleware-net:
    driver: bridge


