# ----------------------------
# Package org.csstudio.archive
# ----------------------------

# RDB URL for archived data
#
# Oracle example
# url=jdbc:oracle:thin:user/password@//172.31.73.122:1521/prod
#
# PostgreSQL example
# url=jdbc:postgresql://localhost/archive
#
# MySQL example
url=jdbc:mysql://localhost/archive?rewriteBatchedStatements=true

# RDB user and password
# Some applications also provide command-line option to override.
user=archive
password=$archive

# Schema name. Used with an added "." as prefix for table names.
# For now this is only used with Oracle URLs and ignored for MySQL
schema=

# Timeout [seconds] for certain SQL queries
# Fundamentally, the SQL queries for data take as long as they take
# and any artificial timeout just breaks queries that would otherwise
# have returned OK  few seconds after the timeout.
# We've seen Oracle lockups, though, that caused JDBC to hang forever
# because the SAMPLE table was locked. No error/exception, just hanging.
# A timeout is used for operations other than getting the actual data,
# for example the channel id-by-name query which _should_ return within
# a shot time, to catch that type of RDB lockup.
# timeout_secs=120
# With PostgreSQL, the setQueryTimeout API is not implemented,
# and calling it results in an exception.
# Setting the timeout to 0 disables calls to setQueryTimeout.
timeout_secs=0

# Use a blob to read/write array samples?
#
# The original SAMPLE table did not contain an ARRAY_VAL column
# for the array blob data, but instead used a separate ARRAY_VAL table.
# When running against an old database, this parameter must be set to false. 
use_array_blob=true

# Name of sample table for writing
write_sample_table=sample

# Maximum length of text samples written to SAMPLE.STR_VAL
max_text_sample_length=80

# Use postgres copy instead of insert
use_postgres_copy=false

# Channel names use a prefix ca://, pva://, loc://, ...
# to select the type of PV or network protocol.
# The preference setting
#
#  org.phoebus.pv/default=ca
#
# determines the default type when no prefix is provided.
#
# With EPICS IOCs from release 7 on, the PVs
# "xxx", "ca://xxx" and "pva://xxx" all refer
# to the same record "xxx" on the IOC.
#
# The archive configuration stores the PV name as given.
# It is used as such when connecting to the live data source,
# resulting in "ca://.." or "pva://.." connections as requested.
# Samples are written to the archive under that channel name.
#
# This archive engine preference setting establishes one or more prefixes
# as equal when importing an engine configuration.
# For example, assume
#
#  equivalent_pv_prefixes=ca, pva
#
# When adding a PV "pva://xxx" to the configuration,
# we check if the archive already contains a channel "xxx", "ca://xxx" or "pva://xxx".
# If any of them are found, the `-import` will consider "pva://xxx" as a duplicate.
#
# When importing a PV "pva://xxx" into a sample engine configuration that already
# contains the channel "ca://xxx" or "xxx", the channel will be renamed,
# so that engine will from now on use "pva://xxx".
#
# When importing a PV "pva://xxx" into a configuration that already
# contains a different engine setup with the channel "ca://xxx" or "xxx",
# the channel will by default rename unchanged, so "ca://xxx" or "xxx"
# will remain in their original engine setup, "pva://xxx" will be skipped.
#
# When using `-import` with the additional `-steal_channels` option,
# the existing "...xxx" channel will be renamed to "pva://xxx" and moved
# to the imported engine configuration.
#
# When `equivalent_pv_prefixes` is empty,
# any PV name is used as is without looking for equivalent names.
# So "xxx", "ca://xxx" and "pva://xxx" can then all be imported
# as separate channels, which is likely wrong because it would simply
# store data from the same underlying record more than once.
#
# This default should be the most practical setting when adding
# EPICS 7 IOCs and starting to transition towards "pva://..".
# Existing "xxx" or "ca://xxx" channels can thus be renamed
# to "pva://xxx" while retaining their sample history.
#
# Note that the data browser has a similar `equivalent_pv_prefixes`
# setting to search for a channel name in several variants.
equivalent_pv_prefixes=ca, pva

# Seconds between log messages for Not-a-Number, futuristic, back-in-time values, buffer overruns
# 24h = 24*60*60 = 86400
log_trouble_samples=86400
log_overrun=86400

# Write period in seconds
write_period=30

# Maximum number of repeat counts for scanned channels
max_repeats=60

# Write batch size
batch_size=500

# Buffer reserve (N times what's ideally needed)
buffer_reserve=2.0

# Samples with time stamps this far ahead of the local time
# are ignored
# 24*60*60 = 86400 = 1 day
ignored_future=86400
