# ----------------------
# Package org.phoebus.ui
# ----------------------

# Show the splash screen?
#
# Can also be set via `-splash` resp. `-nosplash` command line options.
splash=true

# 'Welcome' URL.
#
# When left empty, the built-in welcome.html resource is used.
#
# Site-specific products can set this to their desired URL,
# which may include Java system properties to bundle content
# with the product, for example:
#
# ```{code-block} properties
#
# org.phoebus.ui/welcome=file:$(phoebus.install)/welcome_to_hawkins_labs.html
# ```
welcome=

# Default applications
#
# When there are multiple applications that handle
# a resource, the setting determines the one used by default.
#
# :format: comma-separated list with sub-text of default application names.
#
# For example, `run, exe` would pick `display_runtime` over `display_editor`,
# and `foo_executor` over `foo_creator`.
#
# The patterns `edit, creat` would inversely open the editor-type apps.
#
# This makes the `display_runtime` and the `3d_viewer` default apps,
# using `display_editor` and a potentially configured text editor for {file}`{name}.shp` files secondary.
default_apps=run,3d,convert_edm

# Hide SPI-provided menu entries.
#
# :format: comma-separated list of class names.
hide_spi_menu=org.phoebus.ui.monitoring.FreezeUI

# Top resources to show in "File" menu and toolbar
#
# :format: {samp}`{uri1} | {uri2},{Display name 2} | {uri3},{Display name 3}`
top_resources=examples:/01_main.bob?app=display_runtime,Example Display | pv://?sim://sine&app=probe,Probe Example | pv://?sim://sine&loc://x(10)&app=pv_table,PV Table Example | http://www.google.com?app=web, Google

# Home display file.
#
# "Home display" button will navigate to this display.
home_display=examples:/01_main.bob?app=display_runtime,Example Display

# Toolbar entries.
#
# Apps like the file browser contribute a toolbar entry.
# This setting can control which toolbar entries are shown
# and for the most part also in which order.
#
# :format: Comma-separated list of entries.
#
# The special entry `*` adds all remaining available toolbar entries.
# An entry starting with `!` removes that item from the available entries.
# The order of the initial buttons `Home, Top Resources, Layouts, Add Layouts`
# cannot be changed, but they can be suppressed by adding `!`,
# for example `Home, !Top Resources, !Layouts, !Add Layouts`.
#
# The special entry `Add Layouts` is NOT added to the toolbar by default. It
# can be added to the toolbar by specifying `Add Layouts`.
#
# The strings in the list of entries MUST match what is returned from
# `ToolbarEntry#getId()`. This allows for customization/localization of app name
# without the need to adjust the list.
#
# :::{rubric} Examples
# :::
#
# ```{code-block} properties
# :caption: Default buttons, then all remaining available items
#
# Home, Top Resources, Layouts, *
# ```
#
# ```{code-block} properties
# :caption: Default buttons, then assert that File Browser comes next
#
# Home, Top Resources, Layouts, File Browser, *
# ```
#
# ```{code-block} properties
# :caption: Only Home and File Browser:
#
# Home, !Top Resources, !Layouts, File Browser
# ```
toolbar_entries=Home, Top Resources, Layouts, File Browser, *

# How many array elements to show when formatting as text?
max_array_formatting=256

# UI Responsiveness Monitor Period.
#
# Period between tests in milliseconds,
# i.e. the minimum detected UI freeze duration.
#
# Set to 0 to disable.
ui_monitor_period=500

# Show user ID in status bar?
status_show_user=true

# Set default save path.
default_save_path=

# Set the path to a folder with default layouts.
layout_dir=

# Set default layout at start absolutepath.
layout_default=

# If enable layout are saved in `layout_dir` instead of default user location.
save_layout_in_layout_dir=false

# Compute print scaling in 'landscape' mode?
#
# Landscape mode is generally most suited for printouts
# of displays or plots, because the monitor tends to be 'wide'.
#
# At least on Mac OS X, however, the printing always appears to use
# portrait mode, so print layouts computed in landscape mode
# get cropped.
#
# Details can also depend on the printer driver.
print_landscape=true

# When Picture- and/or Symbol widgets are present in an OPI,
# zooming in under Windows using the D3D graphics library can
# cause excessive VRAM usage. Setting a cache hint can work as
# a workaround. Since it has been observed that the cache hints
# also can cause graphical errors, the setting of a cache hint
# is a configurable option, which must explicitly be set to
# have effect.
#
# The setting defaults to the default caching behavior.
#
# :format:
#   one of:
#
#   The empty string or `NONE`
#   : The default caching behavior: caching is DISABLED,
#     and the cache hint is set to `CacheHint.DEFAULT`.
#
#   `DEFAULT`
#   : Caching is ENABLED, and the cache hint is set to `CacheHint.DEFAULT`.
#
#   `SPEED`
#   : Based on very limited testing,
#     this option seems to work the best as a workaround for the excessive VRAM usage.
#
#   `SCALE`
#   : This option has been observed to cause graphical errors on several systems:
#     rotated widgets have been observed to be translated instead of rotated.
#
#   or `QUALITY`, `ROTATE`, `SCALE_AND_ROTATE`.
#
# If an invalid option is entered, a warning is logged, and the
# default caching behavior is used (i.e., caching is DISABLED,
# and the cache hint is set to `CacheHint.DEFAULT`).
cache_hint_for_picture_and_symbol_widgets=


# Whether or not to save user credentials to file or memory so they only have to be entered once.
#
# :::{note}
# This applies to all scopes/applications prompting for credentials.
# :::
#
# :::{seealso}
# The preference {prefs:pref}`org.phoebus.security/secure_store_target`
# :::
save_credentials=false

# Location of the Phoebus documentation
documentation_location=

# How to format the window title.
# The string is formatted with the current active tab as argument.
# The default is `CS-Studio: %s`, where `%s` is replaced by the name of the active tab.
#
# Setting it to just `%s` will show only the active tab.
# Omitting the %s will always show a static title.
# When there is no active tab, the {prefs:pref}`default_window_title` is used instead.
window_title_format=CS-Studio: %s

# The window title when no active tab is open.
default_window_title=CS-Studio

# :::{rubric} Colors
# :::
#
# Colors are of the format `R,G,B` or `R,G,B,A` values in range 0..255

# Color of the text for 'OK' alarm severity.
ok_severity_text_color=0,255,0
# Color of the background for 'OK' alarm severity.
ok_severity_background_color=255,255,255

# Color of the text for 'MINOR' alarm severity
minor_severity_text_color=255,128,0
# Color of the background for 'MINOR' alarm severity
minor_severity_background_color=255,255,255

# Color of the text for 'MAJOR' alarm severity
major_severity_text_color=255,0,0
# Color of the background for 'MAJOR' alarm severity
major_severity_background_color=255,255,255

# Color of the text for 'INVALID' alarm severity
invalid_severity_text_color=255,0,255
# Color of the background for 'INVALID' alarm severity
invalid_severity_background_color=255,255,255

# Color of text for 'UNDEFINED' alarm severity
undefined_severity_text_color=200,0,200,200
# Color of background for 'UNDEFINED' alarm severity
undefined_severity_background_color=255,255,255

# :::{rubric} Color Configuration for the application "Alarm Area Panel"
# :::

alarm_area_panel_ok_severity_text_color=255,255,255
alarm_area_panel_ok_severity_background_color=0,255,0

alarm_area_panel_minor_severity_text_color=255,255,255
alarm_area_panel_minor_severity_background_color=255,128,0

alarm_area_panel_major_severity_text_color=255,255,255
alarm_area_panel_major_severity_background_color=255,0,0

alarm_area_panel_invalid_severity_text_color=255,255,255
alarm_area_panel_invalid_severity_background_color=255,0,255

alarm_area_panel_undefined_severity_text_color=192,192,192
alarm_area_panel_undefined_severity_background_color=200,0,200,200
